{"version":3,"file":"static/js/456.c2b38411.chunk.js","mappings":"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","sources":["Hooks/useDebounce.tsx","components/warehousing/DepositeIntoWarehouseForm.tsx","components/warehousing/CreateNewProducts.tsx","components/warehousing/AbolishProducts.tsx","pages/warehouseing-inbound.tsx","utils/productTypes.ts"],"sourcesContent":["import React from \"react\"\r\n\r\nfunction useDebounce(state: any, delay: number) {\r\n  // State and setters for debounced value\r\n  const [debouncedValue, setDebouncedValue] = React.useState(state)\r\n\r\n  React.useEffect(\r\n    () => {\r\n      // Update debounced value after delay\r\n      const handler = setTimeout(() => {\r\n        setDebouncedValue(state)\r\n      }, delay)\r\n\r\n      // Cancel the timeout if value changes (also on delay change or unmount)\r\n      // This is how we prevent debounced value from updating if value is changed ...\r\n      // .. within the delay period. Timeout gets cleared and restarted.\r\n      return () => {\r\n        clearTimeout(handler)\r\n      }\r\n    },\r\n    [state, delay] // Only re-call effect if value or delay changes\r\n  )\r\n  return debouncedValue\r\n}\r\n\r\nexport default useDebounce\r\n","import React, { useEffect, useRef, useState } from \"react\"\r\nimport \"antd/dist/antd.css\"\r\nimport { Form, Input, InputNumber, Button, FormInstance, Select } from \"antd\"\r\nimport Request from \"@DATA/api.controller\"\r\nimport qs from \"query-string\"\r\nimport { refineQueryString, QueryStringType } from \"@SRC/utils/utilFuncs\"\r\nimport useDebounce from \"@SRC/Hooks/useDebounce\"\r\nimport envSwitch from \"@SRC/utils/ENVCONFIG\"\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 4,\r\n  },\r\n  wrapperCol: {\r\n    span: 20,\r\n  },\r\n}\r\n/* eslint-disable no-template-curly-in-string */\r\n\r\nconst validateMessages = {\r\n  required: \"${label} is required!\",\r\n  types: {\r\n    email: \"${label} is not a valid email!\",\r\n    number: \"${label} is not a valid number!\",\r\n  },\r\n  number: {\r\n    range: \"${label} must be between ${min} and ${max}\",\r\n  },\r\n}\r\n/* eslint-enable no-template-curly-in-string */\r\n\r\nconst WarehousingDepositeForm = () => {\r\n  // Env config loading\r\n  const env = envSwitch(\"dev\")\r\n\r\n  // useRef example usage as  refering an instance of a component\r\n  // 1st step: create a ref\r\n  const ref = useRef<FormInstance<any> | null>()\r\n  const currentProductRef = useRef({}) // store the specific product when selected product is back from server\r\n  const [isloading, setIsloading] = React.useState(false)\r\n\r\n  const onFinish = (values: any) => {}\r\n\r\n  const [products, setProducts] = useState<any>([])\r\n  const [searchParams, setSearchParams] = useState<QueryStringType>({\r\n    name: \"\",\r\n    sku: \"\",\r\n  })\r\n\r\n  const debouncedSearchParams = useDebounce(searchParams, 3000)\r\n\r\n  const getProductData = async (queryData: { name?: string; sku?: string } = {}) => {\r\n    return await Request.get(`${env.dbUri}/products?${qs.stringify(refineQueryString(queryData))}`)\r\n  }\r\n\r\n  const putProductData = (url: string, payload: object, messageTarget: string) => {\r\n    return Request.put(`${env.dbUri}/products/${url}`, payload, messageTarget)\r\n  }\r\n  // 生命周期hook执行，切记不是事件执行，依赖为啥叫依赖而不是监听源头，不是事件驱动的。\r\n  useEffect(() => {\r\n    getProductData().then((response) => {\r\n      setProducts(response)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <Form\r\n      initialValues={{}}\r\n      {...layout}\r\n      name=\"nest-messages\"\r\n      onFinish={onFinish}\r\n      // validateMessages={validateMessages}\r\n      style={{ flex: 1 }} // flex: 1 的作用\r\n      //ref need to receive a instance of a component using a function to pass it into the current state of the ref.\r\n      ref={(formInstance: FormInstance<any> | null) => {\r\n        ref.current = formInstance\r\n      }}>\r\n      <Form.Item label=\"Product Name\" style={{ marginBottom: 0 }}>\r\n        <Form.Item\r\n          name={[\"product\", \"productName\"]}\r\n          rules={[{ required: true }]}\r\n          style={{\r\n            display: \"inline-block\",\r\n            width: \"calc(50% - 8px)\",\r\n            paddingRight: \"5px\",\r\n          }}>\r\n          <Input\r\n            onChange={() => {\r\n              let currentFormValue = ref.current?.getFieldValue(\"product\")\r\n              let queryData = {\r\n                name: currentFormValue.productName,\r\n              }\r\n              getProductData(queryData).then((response: any) => {\r\n                const { currentInStock, sku, updateLog } = response?.[0] || {}\r\n                currentProductRef.current = response?.[0] // store the currentProduct in the ref\r\n                // set FormFields\r\n                ref.current?.setFieldsValue({\r\n                  product: {\r\n                    ...currentFormValue,\r\n                    productSku: sku,\r\n                    productDescription: updateLog,\r\n                    productQuantityAdd: 0,\r\n                    productQuantityInstock: currentInStock,\r\n                  },\r\n                })\r\n              })\r\n            }}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item name={[\"product\", \"productSku\"]} style={{ display: \"inline-block\", width: \"calc(50% - 8px)\" }}>\r\n          <Select\r\n            placeholder=\"Select Product\"\r\n            onChange={() => {\r\n              // 当select数据变化时，获得form表单的product的数据\r\n              let currentFormValue = ref.current?.getFieldValue(\"product\")\r\n              let queryData = {\r\n                sku: currentFormValue.productSku,\r\n              }\r\n              // 根据选择项的数据，进行请求\r\n              getProductData(queryData)\r\n                .then((response: any) => {\r\n                  currentProductRef.current = response?.[0] // store the currentProduct in the ref\r\n                  const { name, currentInStock, sku, updateLog } = response?.[0] || {}\r\n                  // 设置表单数据\r\n                  // setFieldsValue是底层包装了state，确保了表单刷新\r\n                  // 但是，setFieldsValue并不会引发当前组件的刷新\r\n                  // 表单是子组件\r\n                  // 子组件刷新不会引发父组件刷新\r\n                  // 当前组件是父组件，表单是子组件\r\n                  // setFieldsValue触发了表单的数显，即子组件的刷新，确保了表单项目显示正确\r\n                  // 当前组件不会刷新，也就不会出发useEffect\r\n                  ref.current?.setFieldsValue({\r\n                    product: {\r\n                      ...currentFormValue,\r\n                      productName: name,\r\n                      productQuantityInstock: currentInStock,\r\n                      productDescription: updateLog,\r\n                      productQuantityAdd: 0,\r\n                    },\r\n                  })\r\n                })\r\n                .catch((error: any) => {\r\n                  throw new Error(error)\r\n                })\r\n            }}>\r\n            {products.map((product: any) => {\r\n              return (\r\n                <Select.Option value={product.sku} key={product.id}>\r\n                  {product.sku}\r\n                </Select.Option>\r\n              )\r\n            })}\r\n          </Select>\r\n        </Form.Item>\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={[\"product\", \"productSku\"]}\r\n        label=\"SKU\"\r\n        rules={[\r\n          {\r\n            required: false,\r\n            message: \"must provide products SKU\",\r\n          },\r\n        ]}>\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={[\"product\", \"productQuantityAdd\"]}\r\n        label=\"Quantity Addition\"\r\n        rules={[\r\n          {\r\n            type: \"number\",\r\n            min: 0,\r\n          },\r\n        ]}>\r\n        <InputNumber />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={[\"product\", \"productQuantityInstock\"]}\r\n        label=\"Quantity inStock\"\r\n        rules={[\r\n          {\r\n            type: \"number\",\r\n            min: 0,\r\n            max: 99999,\r\n          },\r\n        ]}>\r\n        <InputNumber disabled={true} />\r\n      </Form.Item>\r\n      <Form.Item name={[\"product\", \"productDescription\"]} label=\"Description\">\r\n        <Input.TextArea style={{ minHeight: \"20rem\", maxHeight: \"25rem\" }} />\r\n      </Form.Item>\r\n      <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n        <Button\r\n          loading={isloading}\r\n          type=\"primary\"\r\n          // htmlType=\"submit\"\r\n          block\r\n          style={{ marginBottom: \"1rem\" }}\r\n          onClick={() => {\r\n            setIsloading(true)\r\n            setTimeout(() => {\r\n              let { productQuantityAdd, productDescription } = ref.current?.getFieldValue(\"product\")\r\n\r\n              const currentProduct = currentProductRef.current as any\r\n              const targetId = currentProduct.id\r\n              const payloadProduct = {\r\n                ...currentProduct,\r\n                currentInStock: currentProduct.currentInStock + productQuantityAdd,\r\n                updateLog: productDescription,\r\n              }\r\n              putProductData(targetId, payloadProduct, \"Product\").then((response: any) => {\r\n                if (response.id) {\r\n                }\r\n              })\r\n              setIsloading(false)\r\n              ref.current?.resetFields()\r\n            }, 2000)\r\n          }}>\r\n          Submit\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            ref.current?.resetFields()\r\n          }}\r\n          block>\r\n          Reset Form\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  )\r\n}\r\nexport default WarehousingDepositeForm\r\n","import React, { useRef } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Form, Input, InputNumber, Button, FormInstance, Select, notification } from \"antd\";\r\nimport Request from \"@DATA/api.controller\";\r\nimport envSwitch from \"@SRC/utils/ENVCONFIG\";\r\nimport { details, subType, productTypes } from \"@SRC/utils/productTypes\";\r\nimport { timeStamp } from \"@SRC/utils/utilFuncs\";\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 4,\r\n  },\r\n  wrapperCol: {\r\n    span: 20,\r\n  },\r\n};\r\n\r\n/* eslint-disable no-template-curly-in-string */\r\n\r\nconst validateMessages = {\r\n  required: \"${label} is required!\",\r\n  types: {\r\n    number: \"${label} is not a valid number!\",\r\n  },\r\n  number: {\r\n    range: \"${label} must be between ${min} and ${max}\",\r\n  },\r\n};\r\n/* eslint-enable no-template-curly-in-string */\r\n\r\nconst CreateNewItem = () => {\r\n  // env config loading\r\n  const env = envSwitch(\"dev\");\r\n  //\r\n\r\n  // useRef example usage as  refering an instance of a component\r\n  // 1st step: create a ref\r\n  const ref = useRef<FormInstance<any> | null>();\r\n  const [loadingStatus, setLoadingStatus] = React.useState(false);\r\n\r\n  const onFinish = (values: any) => {};\r\n\r\n  const createNewProduct = (payload: object) => {\r\n    return Request.post(`${env.dbUri}/products`, payload, {}, \"Product\");\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      {...layout}\r\n      name=\"product creation\"\r\n      onFinish={onFinish}\r\n      // validateMessages={validateMessages}\r\n      style={{ flex: 1 }}\r\n      //ref need to receive a instance of a component using a function to pass it into the current state of the ref.\r\n      ref={(formInstance: FormInstance<any> | null) => {\r\n        ref.current = formInstance;\r\n      }}>\r\n      <Form.Item\r\n        name={[\"product\", \"productType\"]}\r\n        label=\"Product Type\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n          },\r\n        ]}>\r\n        <Select\r\n          placeholder=\"Please select a Type\"\r\n          onChange={() => {\r\n            // console.log(ref.current?.getFieldValue(\"product\").productType)\r\n            setLoadingStatus(false);\r\n          }}>\r\n          {productTypes.map((type: { id: number; name: string }) => {\r\n            return (\r\n              <Select.Option key={type.id} value={type.name}>\r\n                {type.name}\r\n              </Select.Option>\r\n            );\r\n          })}\r\n        </Select>\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={[\"product\", \"productSubType\"]}\r\n        label=\"SubType\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n          },\r\n        ]}>\r\n        <Select placeholder=\"Please select SubType of the product\">\r\n          {subType.map((sub: any) => {\r\n            return (\r\n              <Select.Option key={sub.id} value={sub.name}>\r\n                {sub.name}\r\n              </Select.Option>\r\n            );\r\n          })}\r\n        </Select>\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={[\"product\", \"productDetail\"]}\r\n        label=\"Detail\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n          },\r\n        ]}>\r\n        <Select placeholder=\"Please select the detail definition\">\r\n          {details.map((detail) => {\r\n            return (\r\n              <Select.Option key={detail.id} value={detail.name}>\r\n                {detail.name}\r\n              </Select.Option>\r\n            );\r\n          })}\r\n        </Select>\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={[\"product\", \"productName\"]}\r\n        label=\"Product Name\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n          },\r\n        ]}>\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={[\"product\", \"productSku\"]}\r\n        label=\"SKU\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n          },\r\n        ]}>\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={[\"product\", \"productSize\"]}\r\n        label=\"Size\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n          },\r\n        ]}>\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={[\"product\", \"productLength\"]}\r\n        label=\"Length\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n          },\r\n        ]}>\r\n        <InputNumber />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={[\"product\", \"productPrice\"]}\r\n        label=\"Price\"\r\n        rules={[\r\n          {\r\n            type: \"number\",\r\n            min: 0,\r\n          },\r\n        ]}>\r\n        <InputNumber />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={[\"product\", \"productPowderCoatingPrice\"]}\r\n        label=\"PowderCoatingPrice\"\r\n        rules={[\r\n          {\r\n            type: \"number\",\r\n            min: 0,\r\n          },\r\n        ]}>\r\n        <InputNumber />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={[\"product\", \"productPowderInstallationPrice\"]}\r\n        label=\"InstallationPrice\"\r\n        rules={[\r\n          {\r\n            type: \"number\",\r\n            min: 0,\r\n          },\r\n        ]}>\r\n        <InputNumber />\r\n      </Form.Item>\r\n      <Form.Item name={[\"product\", \"productDescription\"]} label=\"Description\">\r\n        <Input.TextArea style={{ minHeight: \"10rem\", maxHeight: \"25rem\" }} />\r\n      </Form.Item>\r\n      <Form.Item name={[\"product\", \"productSpecification\"]} label=\"Specification\">\r\n        <Input.TextArea style={{ minHeight: \"10rem\", maxHeight: \"25rem\" }} />\r\n      </Form.Item>\r\n      <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n        <Button\r\n          type=\"primary\"\r\n          // htmlType=\"submit\"\r\n          block\r\n          style={{ marginBottom: \"1rem\" }}\r\n          loading={loadingStatus}\r\n          onClick={() => {\r\n            setLoadingStatus(true);\r\n            setTimeout(() => {\r\n              const currentFormValues = ref.current?.getFieldValue(\"product\");\r\n              const productPayload = {\r\n                subtype: currentFormValues.productSubType,\r\n                detail: currentFormValues.productDetail,\r\n                length: currentFormValues.productLength,\r\n                type: currentFormValues.productType,\r\n                name: currentFormValues.productName,\r\n                sku: currentFormValues.productSku,\r\n                size: currentFormValues.productSize,\r\n                price: currentFormValues.productPrice,\r\n                powdercoatingPrice: currentFormValues.productPowderCoatingPrice,\r\n                installationPrice: currentFormValues.productPowderInstallationPrice,\r\n                desc: currentFormValues.productDescription,\r\n                spec: currentFormValues.productSpecification,\r\n                currentInStock: 0,\r\n                updateLog: \"\",\r\n                lastUpdate: timeStamp(),\r\n              };\r\n              createNewProduct(productPayload);\r\n              setLoadingStatus(false);\r\n              ref.current?.resetFields();\r\n            }, 2000);\r\n          }}>\r\n          Submit\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            ref.current?.resetFields();\r\n          }}\r\n          block>\r\n          Reset Form\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\nexport default CreateNewItem;\r\n","import React, { useEffect, useRef, useState } from \"react\"\r\nimport \"antd/dist/antd.css\"\r\nimport { Form, Input, InputNumber, Button, FormInstance, Select, Typography } from \"antd\"\r\nimport Request from \"@DATA/api.controller\"\r\nimport qs from \"query-string\"\r\nimport { refineQueryString, QueryStringType } from \"@SRC/utils/utilFuncs\"\r\nimport useDebounce from \"@SRC/Hooks/useDebounce\"\r\nimport envSwtich from \"@SRC/utils/ENVCONFIG\"\r\nimport { productTypes, details, subType } from \"@SRC/utils/productTypes\"\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 4,\r\n  },\r\n  wrapperCol: {\r\n    span: 20,\r\n  },\r\n}\r\n/* eslint-disable no-template-curly-in-string */\r\n\r\nconst validateMessages = {\r\n  required: \"${label} is required!\",\r\n  types: {\r\n    number: \"${label} is not a valid number!\",\r\n  },\r\n  number: {\r\n    range: \"${label} must be between ${min} and ${max}\",\r\n  },\r\n}\r\n/* eslint-enable no-template-curly-in-string */\r\n\r\nconst WarehousingAbolishForm = () => {\r\n  // ev config loading\r\n  const env = envSwtich(\"dev\")\r\n\r\n  // useRef example usage as  refering an instance of a component\r\n  // 1st step: create a ref\r\n  const ref = useRef<FormInstance<any> | null>()\r\n\r\n  const onFinish = (values: any) => {}\r\n\r\n  const [isloading, setIsloading] = useState(false)\r\n  const [products, setProducts] = useState<any>([])\r\n  const [searchParams, setSearchParams] = useState<QueryStringType>({\r\n    name: \"\",\r\n    sku: \"\",\r\n  })\r\n\r\n  const debouncedSearchParams = useDebounce(searchParams, 3000)\r\n\r\n  const getProductData = async (queryData: { name?: string; sku?: string } = {}) => {\r\n    return await Request.get(`${env.dbUri}/products?${qs.stringify(refineQueryString(queryData))}`)\r\n  }\r\n\r\n  const putProductData = async (url: string, payload: object) => {\r\n    return await Request.put(`${env.dbUri}/products/${url}`, payload, \"Product\")\r\n  }\r\n  // 生命周期hook执行，切记不是事件执行，依赖为啥叫依赖而不是监听源头，不是事件驱动的。\r\n  useEffect(() => {\r\n    // load the producData and productTypes on the first render and only load once\r\n\r\n    getProductData().then((response) => {\r\n      setProducts(response)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <Form\r\n      initialValues={{}}\r\n      {...layout}\r\n      name=\"nest-messages\"\r\n      onFinish={onFinish}\r\n      // validateMessages={validateMessages}\r\n      style={{ flex: 1 }} // flex: 1 的作用\r\n      //ref need to receive a instance of a component using a function to pass it into the current state of the ref.\r\n      ref={(formInstance: FormInstance<any> | null) => {\r\n        ref.current = formInstance\r\n      }}>\r\n      <Form.Item label=\"Search for the Product\" style={{ marginBottom: 0 }}>\r\n        <Form.Item\r\n          name={[\"product\", \"productName\"]}\r\n          rules={[{ required: true }]}\r\n          style={{\r\n            display: \"inline-block\",\r\n            width: \"calc(50% - 8px)\",\r\n            paddingRight: \"5px\",\r\n          }}>\r\n          <Input\r\n            placeholder=\"Please Input the product name\"\r\n            onChange={() => {\r\n              let currentFormValue = ref.current?.getFieldValue(\"product\")\r\n              let queryData = {\r\n                name: currentFormValue.productName,\r\n              }\r\n              getProductData(queryData).then((response: any) => {\r\n                const { type, size, price, powdercoatingprice, currentInStock, sku, updateLog, spec, desc, installationprice } = response?.[0] || {}\r\n                // set FormFields\r\n                ref.current?.setFieldsValue({\r\n                  product: {\r\n                    ...currentFormValue,\r\n                    productType: type,\r\n                    productSku: sku,\r\n                    productUpdateLog: updateLog,\r\n                    productQuantityAdd: 0,\r\n                    productQuantityInstock: currentInStock,\r\n                    productSpecification: spec,\r\n                    productDescription: desc,\r\n                    productInstallationPrice: installationprice,\r\n                    productPowderCoatingPrice: powdercoatingprice,\r\n                    productPrice: price,\r\n                    productSize: size,\r\n                  },\r\n                })\r\n              })\r\n            }}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item name={[\"product\", \"productSku\"]} style={{ display: \"inline-block\", width: \"calc(50% - 8px)\" }}>\r\n          <Select\r\n            placeholder=\"Select Product from list\"\r\n            onChange={() => {\r\n              // 当select数据变化时，获得form表单的product的数据\r\n              let currentFormValue = ref.current?.getFieldValue(\"product\")\r\n              let queryData = {\r\n                sku: currentFormValue.productSku,\r\n              }\r\n              // 根据选择项的数据，进行请求\r\n              getProductData(queryData)\r\n                .then((response: any) => {\r\n                  console.log(response)\r\n                  const { type, name, size, price, powdercoatingprice, currentInStock, updateLog, spec, desc, installationprice } = response?.[0] || {}\r\n                  // 设置表单数据\r\n                  // setFieldsValue是底层包装了state，确保了表单刷新\r\n                  // 但是，setFieldsValue并不会引发当前组件的刷新\r\n                  // 表单是子组件\r\n                  // 子组件刷新不会引发父组件刷新\r\n                  // 当前组件是父组件，表单是子组件\r\n                  // setFieldsValue触发了表单的数显，即子组件的刷新，确保了表单项目显示正确\r\n                  // 当前组件不会刷新，也就不会出发useEffect\r\n                  ref.current?.setFieldsValue({\r\n                    product: {\r\n                      ...currentFormValue,\r\n                      productType: type,\r\n                      productName: name,\r\n                      productUpdateLog: updateLog,\r\n                      productQuantityAdd: 0,\r\n                      productQuantityInstock: currentInStock,\r\n                      productSpecification: spec,\r\n                      productDescription: desc,\r\n                      productInstallationPrice: installationprice,\r\n                      productPowderCoatingPrice: powdercoatingprice,\r\n                      productPrice: price,\r\n                      productSize: size,\r\n                    },\r\n                  })\r\n                })\r\n                .catch((error: any) => {\r\n                  throw new Error(error)\r\n                })\r\n            }}>\r\n            {products.map((product: any) => {\r\n              return (\r\n                <Select.Option value={product.sku} key={product.id}>\r\n                  {product.sku}\r\n                </Select.Option>\r\n              )\r\n            })}\r\n          </Select>\r\n        </Form.Item>\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={[\"product\", \"productType\"]}\r\n        label=\"Type\"\r\n        rules={[\r\n          {\r\n            required: false,\r\n            message: \"must provide product Type\",\r\n          },\r\n        ]}>\r\n        <Select\r\n          placeholder=\"Please select a Type\"\r\n          onChange={() => {\r\n            // console.log(ref.current?.getFieldValue(\"product\").productType)\r\n          }}>\r\n          {productTypes.map((type: { id: number; name: string }) => {\r\n            return (\r\n              <Select.Option key={type.id} value={type.name}>\r\n                {type.name}\r\n              </Select.Option>\r\n            )\r\n          })}\r\n        </Select>\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={[\"product\", \"productSubType\"]}\r\n        label=\"SubType\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n          },\r\n        ]}>\r\n        <Select placeholder=\"Please select SubType of the product\">\r\n          {subType.map((sub: any) => {\r\n            return (\r\n              <Select.Option key={sub.id} value={sub.name}>\r\n                {sub.name}\r\n              </Select.Option>\r\n            )\r\n          })}\r\n        </Select>\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={[\"product\", \"productDetail\"]}\r\n        label=\"Detail\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n          },\r\n        ]}>\r\n        <Select placeholder=\"Please select the detail definition\">\r\n          {details.map((detail) => {\r\n            return (\r\n              <Select.Option key={detail.id} value={detail.name}>\r\n                {detail.name}\r\n              </Select.Option>\r\n            )\r\n          })}\r\n        </Select>\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={[\"product\", \"productSku\"]}\r\n        label=\"SKU\"\r\n        rules={[\r\n          {\r\n            required: false,\r\n            message: \"must provide products SKU\",\r\n          },\r\n        ]}>\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={[\"product\", \"productQuantityEff\"]}\r\n        label=\"Quantity Effected\"\r\n        rules={[\r\n          {\r\n            type: \"number\",\r\n            min: 0,\r\n          },\r\n        ]}>\r\n        <InputNumber />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={[\"product\", \"productQuantityInstock\"]}\r\n        label=\"Quantity inStock\"\r\n        rules={[\r\n          {\r\n            type: \"number\",\r\n            min: 0,\r\n            max: 99999,\r\n          },\r\n        ]}>\r\n        <InputNumber disabled={true} />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={[\"product\", \"productPrice\"]}\r\n        label=\"Product Price\"\r\n        rules={[\r\n          {\r\n            type: \"number\",\r\n            min: 0,\r\n            max: 99999,\r\n          },\r\n        ]}>\r\n        <InputNumber />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={[\"product\", \"productPowderCoatingPrice\"]}\r\n        label=\"Powder Coating Price\"\r\n        rules={[\r\n          {\r\n            type: \"number\",\r\n            min: 0,\r\n            max: 99999,\r\n          },\r\n        ]}>\r\n        <InputNumber />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={[\"product\", \"productInstallationPrice\"]}\r\n        label=\"Installation Price\"\r\n        rules={[\r\n          {\r\n            type: \"number\",\r\n            min: 0,\r\n            max: 99999,\r\n          },\r\n        ]}>\r\n        <InputNumber />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={[\"product\", \"productSize\"]}\r\n        label=\"Size\"\r\n        rules={[\r\n          {\r\n            required: false,\r\n          },\r\n        ]}>\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item name={[\"product\", \"productDescription\"]} label=\"Description\">\r\n        <Input.TextArea style={{ minHeight: \"10rem\", maxHeight: \"25rem\" }} />\r\n      </Form.Item>\r\n      <Form.Item name={[\"product\", \"productSpecification\"]} label=\"Specification\">\r\n        <Input.TextArea style={{ minHeight: \"10rem\", maxHeight: \"25rem\" }} />\r\n      </Form.Item>\r\n      <Form.Item name={[\"product\", \"productUpdateLog\"]} label=\"Update Log\">\r\n        <Input.TextArea style={{ minHeight: \"10rem\", maxHeight: \"25rem\" }} />\r\n      </Form.Item>\r\n\r\n      <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n        <Button\r\n          type=\"primary\"\r\n          // htmlType=\"submit\"\r\n          block\r\n          style={{ marginBottom: \"1rem\" }}\r\n          onClick={() => {\r\n            setIsloading(true)\r\n            setTimeout(() => {\r\n              let { productQuantityAdd, productDescription } = ref.current?.getFieldValue(\"product\")\r\n              const currentProduct = products[0]\r\n              const targetId = currentProduct.id\r\n              const payloadProduct = {\r\n                ...currentProduct,\r\n                currentInStock: currentProduct.currentInStock + productQuantityAdd,\r\n                updateLog: productDescription,\r\n              }\r\n              putProductData(targetId, payloadProduct).then((response) => {\r\n                console.log(`product ${response} is create.`)\r\n              })\r\n\r\n              setIsloading(false)\r\n              ref.current?.resetFields()\r\n            }, 2000)\r\n          }}>\r\n          Submit\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            ref.current?.resetFields()\r\n          }}\r\n          block>\r\n          Reset Form\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  )\r\n}\r\nexport default WarehousingAbolishForm\r\n","import React, { useState } from \"react\"\r\nimport \"antd/dist/antd.css\"\r\nimport { Button } from \"antd\"\r\nimport WarehousingDepositeForm from \"@SRC/components/warehousing/DepositeIntoWarehouseForm\"\r\nimport CreateNewItem from \"@SRC/components/warehousing/CreateNewProducts\"\r\nimport WarehousingAbolishForm from \"@SRC/components/warehousing/AbolishProducts\"\r\nimport { stringify } from \"querystring\"\r\n\r\n/* eslint-disable no-template-curly-in-string */\r\n\r\n/* eslint-enable no-template-curly-in-string */\r\n\r\nconst WarehousingInbound = () => {\r\n  //selector init with default selection\r\n  const [selector, setSelector] = useState<{ select: string; activate: undefined | \"primary\" }>({ select: \"Deposite\", activate: undefined })\r\n\r\n  const formSelection = (selector: { select: string; activate: any }) => {\r\n    switch (selector.select) {\r\n      case \"Deposite\":\r\n        return <WarehousingDepositeForm />\r\n        break\r\n      case \"Create\":\r\n        return <CreateNewItem />\r\n        break\r\n      case \"Abolish\":\r\n        return <WarehousingAbolishForm />\r\n        break\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", gap: \"20px 5rem\", alignItems: \"flex-start\", width: \"100%\" }}>\r\n      <div style={{ marginTop: \"5rem\", display: \"flex\", width: \"100%\" }}>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\", gap: \" 2rem\" }}>\r\n          <h3>Please click to select operation </h3>\r\n          <Button\r\n            type={selector.select === \"Deposite\" ? \"primary\" : undefined}\r\n            onClick={() => {\r\n              setSelector({ ...selector, select: \"Deposite\" })\r\n            }}>\r\n            Deposite into the WareHouse\r\n          </Button>\r\n          <Button\r\n            type={selector.select === \"Create\" ? \"primary\" : undefined}\r\n            onClick={() => {\r\n              setSelector({ ...selector, select: \"Create\" })\r\n            }}>\r\n            Create New Product\r\n          </Button>\r\n          <Button\r\n            type={selector.select === \"Abolish\" ? \"primary\" : undefined}\r\n            onClick={() => {\r\n              setSelector({ ...selector, select: \"Abolish\" })\r\n            }}>\r\n            Abolish / Edit Product Info\r\n          </Button>\r\n        </div>\r\n        {formSelection(selector)}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default WarehousingInbound\r\n","export const details = [\r\n  {\r\n    id: 0,\r\n    name: \"no detail\",\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"sideOpen\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"sideOpen with Drawers\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"topOpen\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"caravan Toolbox\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"generator Toolbox\",\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"3/4 sideopen Toolbox\",\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"full sideopen Toolbox\",\r\n  },\r\n  {\r\n    id: 8,\r\n    name: \"full sideopen Toolbox with drawers\",\r\n  },\r\n  {\r\n    id: 9,\r\n    name: \"2 doors canopy\",\r\n  },\r\n  {\r\n    id: 10,\r\n    name: \"3 doors canopy\",\r\n  },\r\n];\r\n\r\n// SubType definition\r\n\r\nexport const subType = [\r\n  {\r\n    id: 0,\r\n    name: \"no subtype\",\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"dogbox\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"drawbar\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"gullwing\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"sideOpen Toolbox\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"topOpen Toolbox\",\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"underTray Toolbox\",\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"campers Toolbox\",\r\n  },\r\n  {\r\n    id: 8,\r\n    name: \"trundel drawer\",\r\n  },\r\n  {\r\n    id: 9,\r\n    name: \"tub Toolbox\",\r\n  },\r\n  {\r\n    id: 10,\r\n    name: \"partTray canopy\",\r\n  },\r\n  {\r\n    id: 11,\r\n    name: \"dualcab canopy\",\r\n  },\r\n  {\r\n    id: 12,\r\n    name: \"extracab canopy\",\r\n  },\r\n  {\r\n    id: 13,\r\n    name: \"singlecab canopy\",\r\n  },\r\n  {\r\n    id: 14,\r\n    name: \"dog canopy\",\r\n  },\r\n  {\r\n    id: 15,\r\n    name: \"1000H canopy\",\r\n  },\r\n  {\r\n    id: 16,\r\n    name: \"jackoff canopy\",\r\n  },\r\n];\r\n\r\nexport const productTypes = [\r\n  {\r\n    id: 1,\r\n    name: \"toolbox\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"canopy\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"tray\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"accessories\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"4x4\",\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"serviceBody\",\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"combo\",\r\n  },\r\n  {\r\n    id: 8,\r\n    name: \"tubCanopy\",\r\n  },\r\n];\r\n\r\nexport const orderStatus = [\r\n  {\r\n    id: 0,\r\n    name: \"pending\",\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"partiallyPayed\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"fullyPayed\",\r\n  },\r\n];\r\n\r\nexport const fabricationStatus = [\r\n  {\r\n    id: 0,\r\n    name: \"pending\",\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"machineProcessing\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"machineProcessFinished\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"powderCoating\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"powderCoatingFinished\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"waitingForInstallation\",\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"installing\",\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"ready\",\r\n  },\r\n];\r\n\r\nexport const logisticStatus = [\r\n  {\r\n    id: 0,\r\n    name: \"waitingForCarrier\",\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"delivering\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"delivered\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"cannotDeliver\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"returningToVender\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"returnedItemArrived\",\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"itemDamagedInTransport\",\r\n  },\r\n];\r\n\r\nexport const logisticProvider = [\r\n  {\r\n    id: 0,\r\n    name: \"Australian Post\",\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"Big Post\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"FastWay\",\r\n  },\r\n];\r\n"],"names":["state","delay","React","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","layout","labelCol","span","wrapperCol","env","envSwitch","ref","useRef","currentProductRef","isloading","setIsloading","useState","products","setProducts","name","sku","searchParams","getProductData","useDebounce","queryData","Request","dbUri","qs","refineQueryString","useEffect","then","response","initialValues","onFinish","values","style","flex","formInstance","current","label","marginBottom","rules","required","display","width","paddingRight","onChange","currentFormValue","getFieldValue","productName","currentInStock","updateLog","setFieldsValue","product","productSku","productDescription","productQuantityAdd","productQuantityInstock","placeholder","catch","error","Error","map","value","id","message","type","min","max","disabled","minHeight","maxHeight","offset","loading","block","onClick","url","payload","messageTarget","currentProduct","targetId","payloadProduct","resetFields","loadingStatus","setLoadingStatus","productTypes","subType","sub","details","detail","currentFormValues","productPayload","subtype","productSubType","productDetail","length","productLength","productType","size","productSize","price","productPrice","powdercoatingPrice","productPowderCoatingPrice","installationPrice","productPowderInstallationPrice","desc","spec","productSpecification","lastUpdate","timeStamp","envSwtich","putProductData","powdercoatingprice","installationprice","productUpdateLog","productInstallationPrice","console","log","select","activate","undefined","selector","setSelector","gap","alignItems","marginTop","flexDirection","formSelection","orderStatus","fabricationStatus","logisticStatus","logisticProvider"],"sourceRoot":""}