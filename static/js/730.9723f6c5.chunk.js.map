{"version":3,"file":"static/js/730.9723f6c5.chunk.js","mappings":"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","sources":["components/Logistic/SingleLogistic.Module.tsx","utils/commomComponents/FlatSelect.module.tsx","components/Logistic/LogisticInfo.Modal.tsx","pages/LogisticIndex.tsx","utils/productTypes.ts"],"sourcesContent":["import React from \"react\";\r\nimport { Steps, Button, message, Input } from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { updateOrderForLogistic } from \"@SRC/data/api.service\";\r\n\r\nconst { TextArea } = Input;\r\nconst { Step } = Steps;\r\n\r\nconst steps = [\r\n  {\r\n    id: 0,\r\n    title: \"Waiting For Carrier\",\r\n    content: \"Item packaged, Waiting for Carrier company to collect it.\",\r\n    subtitle: \"Contact Carrier company\",\r\n    percent: \"0%\",\r\n    value: \"waitingForCarrier\",\r\n  },\r\n  {\r\n    id: 1,\r\n    title: \"Already pickedUp\",\r\n    content: \"Carrier company already collected item.\",\r\n    subtitle: \"Items is in the depot\",\r\n    percent: \"15%\",\r\n    value: \"pickupAlready\",\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Delivering in Progress\",\r\n    content: \"Delivering\",\r\n    subtitle: \"Items is being delivering!\",\r\n    percent: \"30%\",\r\n    value: \"delivering\",\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Delivered\",\r\n    content: \"Item already delivered to the depot or client's designated address.\",\r\n    subtitle: \"Already delivered\",\r\n    percent: \"45%\",\r\n    value: \"delivered\",\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Cannot deliver!\",\r\n    content: \"Wrong Address or no one in the house.\",\r\n    subtitle: \"Something wrong!\",\r\n    percent: \"70%\",\r\n    value: \"cannotDeliver\",\r\n  },\r\n  {\r\n    id: 5,\r\n    title: \"Returing to Vender\",\r\n    content: \"Cannot deliver, item returning to vender!\",\r\n    subtitle: \"Returning!\",\r\n    percent: \"85%\",\r\n    value: \"returningToVender\",\r\n  },\r\n  {\r\n    id: 6,\r\n    title: \"Item Returned\",\r\n    content: \"Returned Item Received!\",\r\n    subtitle: \"Returned\",\r\n    percent: \"90%\",\r\n    value: \"returnedItemArrived\",\r\n  },\r\n  {\r\n    id: 7,\r\n    title: \"Item Damaged\",\r\n    content: \"Item Damaged during transpotation, consideration compensation to the client as an option, or return the item! and send a new one\",\r\n    subtitle: \"Damaged\",\r\n    percent: \"100%\",\r\n    value: \"itemDamagedInTransport\",\r\n  },\r\n];\r\n\r\nexport default function SingleLogisticModule({ order, getOrder }: any) {\r\n  const getCurrentLogiIdOutofOrder = (): number => {\r\n    let id = 0;\r\n    for (let item of steps) {\r\n      if (item.value === order.logisticStatus) {\r\n        id = item.id;\r\n        return id;\r\n      }\r\n    }\r\n    return id;\r\n  };\r\n\r\n  const [current, setCurrent] = React.useState<number>(getCurrentLogiIdOutofOrder());\r\n  const [logisticInfo, setLogisticInfo] = React.useState<string>(order.logisticStatus);\r\n\r\n  const next = () => {\r\n    setCurrent(current + 1);\r\n  };\r\n\r\n  const prev = () => {\r\n    setCurrent(current - 1);\r\n  };\r\n\r\n  const updateFabStatus = async () => {\r\n    let payload = {\r\n      ...order,\r\n      logisticStatus: steps[current].value,\r\n      // fabricationInfo: fabricationInfo,\r\n    };\r\n    await updateOrderForLogistic(order.id, payload).then(getOrder());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Steps current={current} size=\"small\">\r\n        {steps.map((item) => (\r\n          <Step\r\n            key={item.title}\r\n            title={item.title}\r\n            description={item.subtitle}\r\n            // nested Ternary expression\r\n            icon={item.id >= 4 ? null : item.id === current && <LoadingOutlined />}\r\n            // status={current === item.id && item.id > 4 ? \"error\" : \"process\"}\r\n            status={current === item.id && item.id >= 4 ? \"error\" : \"process\"}\r\n          />\r\n        ))}\r\n      </Steps>\r\n      <StepContent>\r\n        <TextAreaContainer>\r\n          <TextAreaNew\r\n            autoSize={{ minRows: 20, maxRows: 10 }}\r\n            showCount\r\n            maxLength={2000}\r\n            rows={20}\r\n            value={logisticInfo}\r\n            onChange={(event) => {\r\n              setLogisticInfo(event.target.value);\r\n            }}\r\n          />\r\n        </TextAreaContainer>\r\n        <TextAreaContainer>\r\n          <TextAreaNew autoSize={{ minRows: 20, maxRows: 10 }} rows={20} maxLength={2000} value={steps[current].content} showCount />\r\n        </TextAreaContainer>\r\n      </StepContent>\r\n      <StepAction>\r\n        {current < steps.length - 1 && (\r\n          <Button type=\"primary\" style={{ width: \"6rem\" }} onClick={() => next()}>\r\n            Next\r\n          </Button>\r\n        )}\r\n        {current === steps.length - 1 && (\r\n          <Button type=\"primary\" style={{ width: \"6rem\" }} onClick={() => message.success(\"Processing complete!\")}>\r\n            Finished\r\n          </Button>\r\n        )}\r\n        {current > 0 && (\r\n          <Button style={{ margin: \"0 8px\" }} onClick={() => prev()}>\r\n            Previous\r\n          </Button>\r\n        )}\r\n        <Button\r\n          danger\r\n          type=\"primary\"\r\n          style={{ margin: \"0 8px\" }}\r\n          onClick={() => {\r\n            updateFabStatus();\r\n          }}>\r\n          Comfirm Status Change\r\n        </Button>\r\n      </StepAction>\r\n    </>\r\n  );\r\n}\r\n\r\nconst StepContent = styled.div`\r\n  min-height: 200px;\r\n  margin-top: 16px;\r\n  background-color: #fafafa;\r\n  border: 1px dashed #e9e9e9;\r\n  border-radius: 2px;\r\n  display: grid;\r\n  grid-template-columns: 2fr 3fr;\r\n  grid-template-rows: 1fr;\r\n  grid-column-gap: 10px;\r\n  grid-row-gap: 0px;\r\n`;\r\n\r\nconst StepAction = styled.div`\r\n  margin-top: 24px;\r\n`;\r\n\r\nconst TextAreaContainer = styled.div``;\r\n\r\nconst TextAreaNew = styled(TextArea)`\r\n  flex: 0 1 auto;\r\n  margin: 2rem;\r\n  width: 90%;\r\n  height: 200;\r\n  align-items: center;\r\n  resize: none;\r\n`;\r\n\r\nconst DisplayContentContainer = styled.p`\r\n  margin: 2rem;\r\n`;\r\n","import React from \"react\";\r\nimport { Form, Select, Input, FormInstance, DatePicker, Button, Space } from \"antd\";\r\nimport { logisticStatus, logisticProvider } from \"../productTypes\";\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst { Search } = Input;\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 6,\r\n  },\r\n  wrapperCol: {\r\n    span: 18,\r\n  },\r\n};\r\n\r\nexport default function FlatSelectModule({ loadingStatus, getOrder, setSearchParams }: { loadingStatus: boolean; getOrder: Function; setSearchParams: Function }) {\r\n  const [formInstance] = Form.useForm<FormInstance>();\r\n  const onFinish = () => {\r\n    let currentFormValue = formInstance.getFieldValue(\"logistic\");\r\n    getOrder(currentFormValue);\r\n  };\r\n  const getDateRange = (value: any, dateRange: any) => {\r\n    console.log(`Value: ${value}`, `dateRange: ${dateRange}`);\r\n  };\r\n  const DateRangeComfirm = (value: any) => {\r\n    console.log(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form\r\n        {...layout}\r\n        name=\"flatSelection\"\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          // justifyContent: \"flex-start\",\r\n          flexWrap: \"wrap\",\r\n        }}\r\n        onFinish={() => onFinish()}\r\n        form={formInstance}>\r\n        <Form.Item\r\n          style={{\r\n            width: \"30rem\",\r\n            marginRight: \"1rem\",\r\n          }}\r\n          name={[\"logistic\", \"logisticStatus\"]}\r\n          label=\"Status\"\r\n          rules={[\r\n            {\r\n              required: false,\r\n            },\r\n          ]}>\r\n          <Select\r\n            placeholder=\"Select\"\r\n            onChange={() => {\r\n              console.log();\r\n            }}>\r\n            {logisticStatus.map((type: { id: number; name: string }) => {\r\n              return (\r\n                <Select.Option key={type.id} value={type.name}>\r\n                  {type.name}\r\n                </Select.Option>\r\n              );\r\n            })}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          style={{\r\n            width: \"30rem\",\r\n            marginRight: \"1rem\",\r\n          }}\r\n          name={[\"logistic\", \"logisticProvider\"]}\r\n          label=\"Provider\"\r\n          rules={[\r\n            {\r\n              required: false,\r\n            },\r\n          ]}>\r\n          <Select\r\n            placeholder=\"Select\"\r\n            onChange={() => {\r\n              // console.log(ref.current?.getFieldValue(\"product\").productType)\r\n              // setLoadingStatus(false);\r\n            }}>\r\n            {logisticProvider.map((type: { id: number; name: string }) => {\r\n              return (\r\n                <Select.Option key={type.id} value={type.name}>\r\n                  {type.name}\r\n                </Select.Option>\r\n              );\r\n            })}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          style={{\r\n            width: \"30rem\",\r\n            marginRight: \"1rem\",\r\n          }}\r\n          name={[\"logistic\", \"dateRange\"]}\r\n          label=\"Date Range\"\r\n          rules={[\r\n            {\r\n              required: false,\r\n            },\r\n          ]}>\r\n          <RangePicker\r\n            // showTime={{ format: \"HH:mm\" }}\r\n            format=\"YYYY-MM-DD\"\r\n            onChange={(value, dateRange) => {\r\n              getDateRange(value, dateRange);\r\n            }}\r\n            onOk={(value) => DateRangeComfirm(value)}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item label=\"Order ID\" rules={[{ required: false }]} name={[\"logistic\", \"id\"]} style={{ width: \"30rem\", marginRight: \"1rem\" }}>\r\n          <Input placeholder=\"Order Id\" />\r\n        </Form.Item>{\" \"}\r\n        <Form.Item label=\"Parcel ID\" rules={[{ required: false }]} name={[\"logistic\", \"parcelId\"]} style={{ width: \"30rem\", marginRight: \"1rem\" }}>\r\n          <Input\r\n            // disabled={uiController.userInfo}\r\n\r\n            placeholder=\"Parcel Id\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item label=\"Controls\" style={{ width: \"30rem\", marginRight: \"1rem\" }}>\r\n          <Space>\r\n            <Button\r\n              type=\"primary\"\r\n              style={{ width: \"7rem\" }}\r\n              loading={false}\r\n              onClick={() => {\r\n                onFinish();\r\n                // getOrder();\r\n              }}>\r\n              Search\r\n            </Button>\r\n            <Button\r\n              danger\r\n              type=\"primary\"\r\n              style={{ width: \"7rem\" }}\r\n              loading={false}\r\n              onClick={() => {\r\n                formInstance.resetFields();\r\n                onFinish();\r\n              }}>\r\n              Reset\r\n            </Button>\r\n          </Space>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n","import { Modal, Form, Input, InputNumber, Button, DatePicker, FormInstance, Select } from \"antd\";\r\nimport React from \"react\";\r\nimport { IlogisticInfo } from \"@SRC/utils/interfaces\";\r\nimport { updateOrderForLogisticInfo } from \"@SRC/data/api.service\";\r\nimport { logisticProvider } from \"@SRC/utils/productTypes\";\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\n\r\n/* eslint-disable no-template-curly-in-string */\r\nconst validateMessages = {\r\n  required: \"${label} is required!\",\r\n  types: {\r\n    email: \"${label} is not a valid email!\",\r\n    number: \"${label} is not a valid number!\",\r\n  },\r\n  number: {\r\n    range: \"${label} must be between ${min} and ${max}\",\r\n  },\r\n};\r\n\r\nconst LogisticInfoModal = ({ visible, setVisible, order, setLoadingStatus }: any) => {\r\n  const [formInstance] = Form.useForm();\r\n  const [confirmLoading, setConfirmLoading] = React.useState(false);\r\n  const [modalText, setModalText] = React.useState(\"Content of the modal\");\r\n  // const [payload, setPayload] = React.useState<IlogisticInfo>({\r\n  //   logisticProvider: \"\",\r\n  //   trackingNumber: \"\",\r\n  //   pickupAt: new Date(),\r\n  //   logisticSideNote: \"\",\r\n  // });\r\n\r\n  const payloadRef = React.useRef<IlogisticInfo>({\r\n    logisticProvider: \"\",\r\n    trackingNumber: \"\",\r\n    pickupAt: new Date(),\r\n    logisticSideNote: \"\",\r\n  });\r\n\r\n  const onFinish = (values: any) => {\r\n    debugger;\r\n    setLoadingStatus(true);\r\n    const currentFormValue: IlogisticInfo = formInstance.getFieldValue(\"logistic\");\r\n    payloadRef.current = {\r\n      logisticProvider: currentFormValue.logisticProvider,\r\n      trackingNumber: currentFormValue.trackingNumber,\r\n      pickupAt: payloadRef.current.pickupAt,\r\n      logisticSideNote: currentFormValue.logisticSideNote,\r\n    };\r\n    order = {\r\n      ...order,\r\n      ...payloadRef.current,\r\n    };\r\n    updateOrderForLogisticInfo(order.id, order)\r\n      .then(() => {\r\n        setTimeout(() => {\r\n          setLoadingStatus(false);\r\n        }, 2000);\r\n      })\r\n      .then(() => {\r\n        formInstance.resetFields();\r\n      });\r\n  };\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n  const handleOk = () => {\r\n    setModalText(\"The modal will be closed after two seconds\");\r\n    setConfirmLoading(true);\r\n    setTimeout(() => {\r\n      setVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    console.log(\"Clicked cancel button\");\r\n    setVisible(false);\r\n  };\r\n\r\n  const getDate = (value: any, date: any) => {\r\n    console.log(`the Date value is: ${value}, the Date is ${date}`);\r\n    return date;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal title=\"Logistic Info\" visible={visible} onOk={handleOk} confirmLoading={confirmLoading} onCancel={handleCancel}>\r\n        {/* <p>{modalText}</p> */}\r\n        <Form {...layout} name=\"logisticInfo\" onFinish={onFinish} validateMessages={validateMessages} form={formInstance}>\r\n          <Form.Item name={[\"logistic\", \"logisticProvider\"]} label=\"Provider\" rules={[{ required: true }]}>\r\n            <Select>\r\n              {logisticProvider.map((item) => {\r\n                return (\r\n                  <Select.Option key={item.id} value={item.name}>\r\n                    {item.name}\r\n                  </Select.Option>\r\n                );\r\n              })}\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item name={[\"logistic\", \"trackingNumber\"]} label=\"trackingNumber\" rules={[{ required: true }]}>\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item name={[\"logistic\", \"pickupAt\"]} label=\"Parcel Pickup at\" rules={[{ required: true }]}>\r\n            <DatePicker\r\n              format=\"YYYY-MM-DD\"\r\n              onChange={(value, date) => {\r\n                payloadRef.current = {\r\n                  ...payloadRef.current,\r\n                  pickupAt: getDate(value, date),\r\n                };\r\n                // setPayload({\r\n                //   ...payloadRef,\r\n                //   pickupAt: getDate(value, date),\r\n                // });\r\n              }}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item name={[\"logistic\", \"logisticSideNote\"]} label=\"SideNote\">\r\n            <Input.TextArea />\r\n          </Form.Item>\r\n          <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={(values) => {\r\n                onFinish(values);\r\n              }}>\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LogisticInfoModal;\r\n","import { Table, Input, Badge, Select, Space } from \"antd\";\r\nimport \"@SRC/pages/pages.css\";\r\nimport { logisticStatusIndicator } from \"@SRC/utils/utilFuncs\";\r\nimport SingleLogisticModule from \"@SRC/components/Logistic/SingleLogistic.Module\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport FlatSelectModule from \"@SRC/utils/commomComponents/FlatSelect.module\";\r\nimport styled from \"styled-components\";\r\nimport { ILogisticSearchParams } from \"@SRC/utils/interfaces\";\r\nimport { getOrderByParams } from \"@SRC/data/api.service\";\r\nimport { logisticProvider } from \"@SRC/utils/productTypes\";\r\nimport LogisticInfoModal from \"@SRC/components/Logistic/LogisticInfo.Modal\";\r\n\r\nconst Logistic = () => {\r\n  const [data, setData] = useState<any>([]);\r\n  const [searchParams, setSearchParams] = useState<ILogisticSearchParams>({ logisticProvider: undefined, logisticStatus: undefined, id: undefined, pickupAt: undefined });\r\n  const [loadingStatus, setLoadingStatus] = useState(false);\r\n  const [visible, setVisible] = React.useState<boolean>(false);\r\n\r\n  const getOrder = (searchParams: ILogisticSearchParams) => {\r\n    getOrderByParams(searchParams, setData, setLoadingStatus);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getOrderByParams(searchParams, setData, setLoadingStatus);\r\n  }, []);\r\n\r\n  const columns = [\r\n    { title: \"Order Number\", dataIndex: \"id\", key: \"orderNumber\" },\r\n    { title: \"Order CreatedAt\", dataIndex: \"createdAt\", key: \"createdAt\" },\r\n    {\r\n      title: \"Tracking Numner\",\r\n      dataIndex: \"trackingNumber\",\r\n      key: \"trackingNumber\",\r\n    },\r\n    {\r\n      title: \"Logistic Provider\",\r\n      dataIndex: \"logisticProvider\",\r\n      key: \"logisticProvider\",\r\n    },\r\n    {\r\n      title: \"Logistic Status\",\r\n      dataIndex: \"logisticStatus\",\r\n      key: \"logisticStatus\",\r\n      render: (currentRowValue: any, currentColumnValue: any, index: number) => (\r\n        <span>\r\n          <Badge status={logisticStatusIndicator(currentRowValue)} />\r\n          {currentRowValue}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      dataIndex: \"providerSelect\",\r\n      key: \"providerSelect\",\r\n      render: (currentRowValue: any, currentColumnValue: any, index: number) => {\r\n        return (\r\n          <Space size=\"middle\">\r\n            <a\r\n              onClick={() => {\r\n                setVisible(true);\r\n              }}>\r\n              Update Info\r\n            </a>\r\n            <LogisticInfoModal visible={visible} setVisible={setVisible} order={currentColumnValue} setLoadingStatus={setLoadingStatus} />\r\n          </Space>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  return (\r\n    <>\r\n      <div style={{ width: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\r\n        <SearchComponentContainer>\r\n          <FlatSelectModule loadingStatus={loadingStatus} getOrder={getOrder} setSearchParams={setSearchParams} />\r\n        </SearchComponentContainer>\r\n        <h3>Logistic Status</h3>\r\n        <Table\r\n          loading={loadingStatus}\r\n          rowClassName={(record, index) => {\r\n            if (index % 2 === 0) {\r\n              return \"warehousing-oddRow\";\r\n            } else return \"warehousing-evenRow\";\r\n          }}\r\n          columns={columns}\r\n          expandable={{\r\n            expandedRowRender: (record) => <SingleLogisticModule order={record} getOrder={getOrder} />,\r\n            // rowExpandable: (record) => record.name !== \"Not Expandable\",\r\n          }}\r\n          dataSource={data}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Logistic;\r\n\r\nconst SearchComponentContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n","export const details = [\r\n  {\r\n    id: 0,\r\n    name: \"no detail\",\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"sideOpen\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"sideOpen with Drawers\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"topOpen\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"caravan Toolbox\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"generator Toolbox\",\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"3/4 sideopen Toolbox\",\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"full sideopen Toolbox\",\r\n  },\r\n  {\r\n    id: 8,\r\n    name: \"full sideopen Toolbox with drawers\",\r\n  },\r\n  {\r\n    id: 9,\r\n    name: \"2 doors canopy\",\r\n  },\r\n  {\r\n    id: 10,\r\n    name: \"3 doors canopy\",\r\n  },\r\n];\r\n\r\n// SubType definition\r\n\r\nexport const subType = [\r\n  {\r\n    id: 0,\r\n    name: \"no subtype\",\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"dogbox\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"drawbar\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"gullwing\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"sideOpen Toolbox\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"topOpen Toolbox\",\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"underTray Toolbox\",\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"campers Toolbox\",\r\n  },\r\n  {\r\n    id: 8,\r\n    name: \"trundel drawer\",\r\n  },\r\n  {\r\n    id: 9,\r\n    name: \"tub Toolbox\",\r\n  },\r\n  {\r\n    id: 10,\r\n    name: \"partTray canopy\",\r\n  },\r\n  {\r\n    id: 11,\r\n    name: \"dualcab canopy\",\r\n  },\r\n  {\r\n    id: 12,\r\n    name: \"extracab canopy\",\r\n  },\r\n  {\r\n    id: 13,\r\n    name: \"singlecab canopy\",\r\n  },\r\n  {\r\n    id: 14,\r\n    name: \"dog canopy\",\r\n  },\r\n  {\r\n    id: 15,\r\n    name: \"1000H canopy\",\r\n  },\r\n  {\r\n    id: 16,\r\n    name: \"jackoff canopy\",\r\n  },\r\n];\r\n\r\nexport const productTypes = [\r\n  {\r\n    id: 1,\r\n    name: \"toolbox\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"canopy\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"tray\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"accessories\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"4x4\",\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"serviceBody\",\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"combo\",\r\n  },\r\n  {\r\n    id: 8,\r\n    name: \"tubCanopy\",\r\n  },\r\n];\r\n\r\nexport const orderStatus = [\r\n  {\r\n    id: 0,\r\n    name: \"pending\",\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"partiallyPayed\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"fullyPayed\",\r\n  },\r\n];\r\n\r\nexport const fabricationStatus = [\r\n  {\r\n    id: 0,\r\n    name: \"pending\",\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"machineProcessing\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"machineProcessFinished\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"powderCoating\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"powderCoatingFinished\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"waitingForInstallation\",\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"installing\",\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"ready\",\r\n  },\r\n];\r\n\r\nexport const logisticStatus = [\r\n  {\r\n    id: 0,\r\n    name: \"waitingForCarrier\",\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"delivering\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"delivered\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"cannotDeliver\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"returningToVender\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"returnedItemArrived\",\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"itemDamagedInTransport\",\r\n  },\r\n];\r\n\r\nexport const logisticProvider = [\r\n  {\r\n    id: 0,\r\n    name: \"Australian Post\",\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"Big Post\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"FastWay\",\r\n  },\r\n];\r\n"],"names":["TextArea","Input","Step","Steps","steps","id","title","content","subtitle","percent","value","SingleLogisticModule","order","getOrder","React","item","logisticStatus","getCurrentLogiIdOutofOrder","current","setCurrent","logisticInfo","setLogisticInfo","updateFabStatus","payload","updateOrderForLogistic","then","size","map","description","icon","LoadingOutlined","status","StepContent","TextAreaContainer","TextAreaNew","autoSize","minRows","maxRows","showCount","maxLength","rows","onChange","event","target","StepAction","length","type","style","width","onClick","message","margin","danger","styled","RangePicker","DatePicker","layout","labelCol","span","wrapperCol","FlatSelectModule","loadingStatus","setSearchParams","Form","formInstance","onFinish","currentFormValue","getFieldValue","name","display","flexDirection","flexWrap","form","marginRight","label","rules","required","placeholder","console","log","logisticProvider","format","dateRange","getDateRange","onOk","DateRangeComfirm","loading","resetFields","validateMessages","types","email","number","range","visible","setVisible","setLoadingStatus","confirmLoading","setConfirmLoading","setModalText","payloadRef","trackingNumber","pickupAt","Date","logisticSideNote","values","updateOrderForLogisticInfo","setTimeout","getDate","date","onCancel","offset","useState","data","setData","undefined","searchParams","getOrderByParams","useEffect","columns","dataIndex","key","render","currentRowValue","currentColumnValue","index","logisticStatusIndicator","SearchComponentContainer","rowClassName","record","expandable","expandedRowRender","dataSource","details","subType","productTypes","orderStatus","fabricationStatus"],"sourceRoot":""}