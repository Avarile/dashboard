{"version":3,"file":"static/js/596.0c4050de.chunk.js","mappings":"8OAUQA,EAASC,EAAAA,EAAAA,KAEjB,WAAe,GAA6E,IAA1EC,EAAyE,EAAzEA,MAAOC,EAAkE,EAAlEA,MAAOC,EAA2D,EAA3DA,QAAwBC,EAAmC,wDACzF,OACE,+BACE,UAAC,IAAD,CAAMF,OAAK,kBAAOA,GAAP,IAAcG,UAAW,yBAA0BC,QAASF,EAAeH,MAAOA,EAAOM,WAAW,EAA/G,WACE,SAACR,EAAD,IACCI,QCXIK,EAAuC,CAElD,CACEC,KAAM,UACNC,MAAO,MACPC,OAAQ,MAEV,CACEF,KAAM,UACNC,MAAO,MACPC,OAAQ,MAEV,CACEF,KAAM,UACNC,MAAO,MACPC,OAAQ,OAEV,CACEF,KAAM,UACNC,MAAO,MACPC,OAAQ,OAEV,CACEF,KAAM,UACNC,MAAO,MACPC,OAAQ,OAEV,CACEF,KAAM,UACNC,MAAO,MACPC,OAAQ,OAEV,CACEF,KAAM,UACNC,MAAO,MACPC,OAAQ,MAEV,CACEF,KAAM,UACNC,MAAO,MACPC,OAAQ,OAEV,CACEF,KAAM,UACNC,MAAO,MACPC,OAAQ,OAEV,CACEF,KAAM,UACNC,MAAO,MACPC,OAAQ,OAEV,CACEF,KAAM,UACNC,MAAO,MACPC,OAAQ,OAEV,CACEF,KAAM,UACNC,MAAO,MACPC,OAAQ,OAGV,CACEF,KAAM,gBACNC,MAAO,MACPC,OAAQ,MAEV,CACEF,KAAM,gBACNC,MAAO,MACPC,OAAQ,MAEV,CACEF,KAAM,gBACNC,MAAO,MACPC,OAAQ,MAEV,CACEF,KAAM,gBACNC,MAAO,MACPC,OAAQ,MAEV,CACEF,KAAM,gBACNC,MAAO,MACPC,OAAQ,MAEV,CACEF,KAAM,gBACNC,MAAO,MACPC,OAAQ,OAEV,CACEF,KAAM,gBACNC,MAAO,MACPC,OAAQ,MAEV,CACEF,KAAM,gBACNC,MAAO,MACPC,OAAQ,MAEV,CACEF,KAAM,gBACNC,MAAO,MACPC,OAAQ,MAEV,CACEF,KAAM,gBACNC,MAAO,MACPC,OAAQ,MAEV,CACEF,KAAM,gBACNC,MAAO,MACPC,OAAQ,MAEV,CACEF,KAAM,gBACNC,MAAO,MACPC,OAAQ,MAIV,CACEF,KAAM,eACNC,MAAO,MACPC,OAAQ,MAEV,CACEF,KAAM,eACNC,MAAO,MACPC,OAAQ,MAEV,CACEF,KAAM,eACNC,MAAO,MACPC,OAAQ,MAEV,CACEF,KAAM,eACNC,MAAO,MACPC,OAAQ,MAEV,CACEF,KAAM,eACNC,MAAO,MACPC,OAAQ,MAEV,CACEF,KAAM,eACNC,MAAO,MACPC,OAAQ,OAEV,CACEF,KAAM,eACNC,MAAO,MACPC,OAAQ,MAEV,CACEF,KAAM,eACNC,MAAO,MACPC,OAAQ,MAEV,CACEF,KAAM,eACNC,MAAO,MACPC,OAAQ,MAEV,CACEF,KAAM,eACNC,MAAO,MACPC,OAAQ,MAEV,CACEF,KAAM,eACNC,MAAO,MACPC,OAAQ,MAEV,CACEF,KAAM,eACNC,MAAO,MACPC,OAAQ,MAIV,CACEF,KAAM,WACNC,MAAO,MACPC,OAAQ,MAEV,CACEF,KAAM,WACNC,MAAO,MACPC,OAAQ,MAEV,CACEF,KAAM,WACNC,MAAO,MACPC,OAAQ,MAEV,CACEF,KAAM,WACNC,MAAO,MACPC,OAAQ,MAEV,CACEF,KAAM,WACNC,MAAO,MACPC,OAAQ,MAEV,CACEF,KAAM,WACNC,MAAO,MACPC,OAAQ,MAEV,CACEF,KAAM,WACNC,MAAO,MACPC,OAAQ,MAEV,CACEF,KAAM,WACNC,MAAO,MACPC,OAAQ,MAEV,CACEF,KAAM,WACNC,MAAO,MACPC,OAAQ,MAEV,CACEF,KAAM,WACNC,MAAO,MACPC,OAAQ,MAEV,CACEF,KAAM,WACNC,MAAO,MACPC,OAAQ,MAEV,CACEF,KAAM,WACNC,MAAO,MACPC,OAAQ,OCrPCC,EAAO,WAClB,IAAMC,EAAS,CACbC,KAAMN,EACNO,OAAQ,QACRC,OAAQ,SACRC,YAAa,OACbC,MAAO,CACLC,MAAO,CACLC,UAAW,SAACC,GAAD,gBAAeA,EAAf,YAGfC,OAAQ,CACNC,SAAU,OAEZC,QAAQ,EACRC,UAAW,CACTC,OAAQ,CACND,UAAW,UACXE,SAAU,OAKhB,OAAO,SAAC,KAAD,UAAUd,KAOnB,EAJ6B,WAC3B,OAAOe,EAAc,CAAE3B,MAAO,2BAA4BC,MAAO,CAAE2B,SAAU,EAAGC,OAAQ,SAAW3B,SAAS,SAACS,EAAD,O,UC5BxGmB,EAAW,WACf,IAkBMlB,EAAS,CACbmB,cAAe,GACflB,KApBW,CACX,CACEmB,KAAM,UACNC,MAAO,IAET,CACED,KAAM,gBACNC,MAAO,IAET,CACED,KAAM,eACNC,MAAO,IAET,CACED,KAAM,WACNC,MAAO,KAMTC,WAAY,QACZC,WAAY,OACZC,OAAQ,GACRlB,MAAO,CACLc,KAAM,QACNK,QAAS,uBAEXC,aAAc,CACZ,CACEN,KAAM,qBAER,CACEA,KAAM,oBAIZ,OAAO,SAAC,KAAD,UAASpB,KAOlB,EAJuB,WACrB,OAAOe,EAAc,CAAE3B,MAAO,kBAAmBC,MAAO,CAAE2B,SAAU,EAAGC,OAAQ,SAAW3B,SAAS,SAAC4B,EAAD,O,gDC1C/FS,EAAoB,WACxB,OACE,SAAC,IAAD,CAActC,MAAO,CAAEuC,UAAW,QAAlC,UACE,SAAC,SAAD,CAAmBC,WAAY,CAAEC,MAAO,QAAUC,aAAc,CAAED,MAAO,QAAzE,gDAqCN,EA9B0B,WAoBxB,OACE,+BACE,iBAAKzC,MAAO,CAAE2C,QAAS,QAAvB,WACE,SAAC,KAAD,UAtBS,CACbf,OAAQ,IACRa,MAAO,IACPG,SAAS,EACTC,QAAS,IACTC,MAAO,CAAC,UAAW,WACnBC,YAAa,IACbZ,OAAQ,IACRa,UAAW,CACTjD,MAAO,CACLC,MAAO,CACL8C,MAAO,UACPG,SAAU,OACVC,WAAY,QAEdhC,UAAW,iBAAM,uBAQjB,SAACoB,EAAD,U,UCFKa,EAAoB,WAC/B,OACE,SAAC,IAAD,WACE,SAAC,SAAD,CAAmBlC,MAAM,SAASuB,WAAY,CAAEC,MAAO,QAAUC,aAAc,CAAED,MAAO,QAAxF,0BAON,EA1C4B,WAC1B,IAQM9B,EAAS,CACbC,KATW,CACX,CACEb,MAAO,SACPqD,OAAQ,CAAC,GAAI,GAAI,KACjBC,SAAU,CAAC,IACXC,OAAQ,KAKVC,aAAc,WACdC,WAAY,SACZC,YAAa,SACb5C,OAAQ,QACRiC,MAAO,CACLY,MAAO,CAAC,UAAW,UAAW,WAC9BC,QAAS,UACTL,OAAQ,WAEVM,MAAO,CACLC,KAAM,MAER7C,OAAO,EACPC,MAAO,CACLqC,QAAQ,IAIZ,OAAO,SAAC,KAAD,kBAAY3C,GAAZ,IAAoBX,MAAO,CAAE4B,OAAQ,Y,mBCO9C,EA9BwB,WACtB,OAAwBkC,EAAAA,EAAAA,UAA+B,IAAvD,eAAOlD,EAAP,KAAamD,EAAb,KACA,GAA0CD,EAAAA,EAAAA,WAAS,GAAnD,yBAMA,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAiBF,KAChB,KAGD,+BACE,SAAC,IAAD,CAAUG,UAAQ,EAACC,YAAY,OAAOC,MAAM,EAAOC,OAAO,OAA1D,SACGzD,EAAK0D,KAAI,SAACC,GACT,OACE,+BACE,SAACC,EAAD,WACE,UAAC,IAAD,CAAOC,UAAU,WAAjB,WACE,wBAAKF,EAAKG,QACV,4CACiB,4BAASH,EAAKI,iBAD/B,4BAeZH,EAAaI,EAAAA,GAAAA,IAAH,iECmBD,SAASC,IACtB,OACE,UAACC,EAAD,WAtDKpD,EAAc,CACnB3B,MAAO,oBACPC,MAAO,CAAE2B,SAAU,EAAGC,OAAQ,SAC9B3B,SACE,iCACE,oCACA,UAAC,IAAD,YACE,SAAC,IAAD,CAAWF,MAAM,uBAAuBiC,MAAM,KAAK+C,UAAW,EAAGC,WAAY,CAAElC,MAAO,UAAWG,SAAU,QAAUgC,QAAQ,SAACC,EAAA,EAAD,IAAqBC,OAAO,OACzJ,SAAC,IAAD,CAAWpF,MAAM,UAAUiC,MAAM,OAAO+C,UAAW,EAAGC,WAAY,CAAElC,MAAO,UAAWG,SAAU,QAAUgC,QAAQ,SAACC,EAAA,EAAD,IAAqBC,OAAO,iBAQ/IzD,EAAc,CACnB3B,MAAO,sBACPC,MAAO,CAAE2B,SAAU,EAAGC,OAAQ,SAC9B3B,SACE,+BACE,SAAC,EAAD,QAOCyB,EAAc,CACnB3B,MAAO,sBACPC,MAAO,CAAE2B,SAAU,EAAGC,OAAQ,SAC9B3B,SACE,iCACE,SAAC,EAAD,KACA,SAACkD,EAAD,SAOCzB,EAAc,CACnB3B,MAAO,gBACPC,MAAO,CAAE2B,SAAU,EAAGC,OAAQ,SAC9B3B,SACE,+BACE,SAAC,EAAD,WAiBR,IAAM6E,EAAwBF,EAAAA,GAAAA,IAAH,wL,6BCnErBQ,EAAU,CACd,CAAErF,MAAO,eAAgBsF,UAAW,KAAMC,IAAK,eAC/C,CAAEvF,MAAO,SAAUsF,UAAW,aAAcC,IAAK,cACjD,CAAEvF,MAAO,cAAesF,UAAW,mBAAoBC,IAAK,eAC5D,CAAEvF,MAAO,eAAgBsF,UAAW,aAAcC,IAAK,eACvD,CACEvF,MAAO,kBACPsF,UAAW,iBACXC,IAAK,iBACLC,OAAQ,SAACC,EAAsBC,EAAyBC,GAAhD,OACN,6BACE,SAAC,IAAD,CAAOC,QAAQC,EAAAA,EAAAA,IAAwBJ,KACtCA,OAIP,CACEzF,MAAO,iBACPsF,UAAW,cACXC,IAAK,cACLC,OAAQ,SAACC,EAAsBC,EAAyBC,GAAhD,OACN,6BACE,SAAC,IAAD,CAAOC,QAAQE,EAAAA,EAAAA,IAAqBL,KACnCA,OAIP,CACEzF,MAAO,qBACPsF,UAAW,oBACXC,IAAK,oBACLC,OAAQ,SAACC,EAAsBC,EAAyBC,GAAhD,OACN,6BACE,SAAC,IAAD,CAAOC,QAAQG,EAAAA,EAAAA,IAA2BN,KACzCA,QAMT,SAASO,EAASC,EAAiBC,EAAcC,EAAaC,GAC5DC,QAAQC,IAAI,SAAUL,EAAYC,EAASC,EAAQC,GAGrD,I,IAsBA,EAtB2B,WACzB,OAAwBrC,EAAAA,EAAAA,UAAqB,IAA7C,eAAOlD,EAAP,KAAamD,EAAb,KACA,GAA0CD,EAAAA,EAAAA,WAAkB,GAA5D,eAAsBwC,GAAtB,WACMC,EAAqB,CACzBC,SAAS,GAOX,OAJAxC,EAAAA,EAAAA,YAAU,YACRyC,EAAAA,EAAAA,IAAiBF,EAAoBxC,EAASuC,KAC7C,IAEI5E,EAAc,CACnB3B,MAAO,sBACPC,MAAO,CAAE2B,SAAU,EAAG+E,aAAc,QACpCzG,SACE,+BACE,SAAC,IAAD,CAAOmF,QAASA,EAASuB,WAAY/F,EAAMmF,SAAUA,EAAUC,YAAY,SCtCnF,EAjBuB,WACrB,MAAwBY,EAAAA,SAAoB,IAA5C,eACA,GADA,UACwCA,EAAAA,SAAoB,CAAEC,QAAS,MAAvE,yBACA,OACE,+BACE,UAACC,EAAD,YACE,SAACjC,EAAD,KACA,SAAC,EAAD,KACA,UAACkC,EAAD,YACE,SAAC,EAAD,KACA,SAAC,EAAD,aASJD,EAAalC,EAAAA,GAAAA,IAAH,qFAMVmC,EAAuBnC,EAAAA,GAAAA,IAAH","sources":["utils/commomComponents/Dashboard.card.tsx","utils/Data.ts","components/Dashboard/AnimatedCharts.module.tsx","components/Dashboard/PieChart.module.tsx","components/Dashboard/SettledOrderChart.card.tsx","components/Dashboard/MonthlyTarget.card.tsx","components/Dashboard/ProductList.card.tsx","components/Dashboard/StatusReportCards.module.tsx","components/Dashboard/OrderList.module.tsx","pages/DashboardIndex.tsx"],"sourcesContent":["import React, { useState, ReactNode } from \"react\";\r\nimport { Skeleton, Switch, Card, Avatar } from \"antd\";\r\nimport {} from \"@ant-design/icons\";\r\n\r\ninterface ICardParams {\r\n  title: string;\r\n  style: any;\r\n  Content: ReactNode;\r\n}\r\n\r\nconst { Meta } = Card;\r\n\r\nexport default ({ title, style, Content }: ICardParams, loadingStatus: boolean = false) => {\r\n  return (\r\n    <>\r\n      <Card style={{ ...style, boxShadow: \"10px 4px 4px #b5b5b5\" }} loading={loadingStatus} title={title} hoverable={false}>\r\n        <Meta />\r\n        {Content}\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n","interface IMonthCostRecord {\r\n  cost: \"Product\" | \"PowderCoating\" | \"Installation\" | \"Logistic\";\r\n  month: \"Jan\" | \"Feb\" | \"Mar\" | \"Apr\" | \"May\" | \"Jun\" | \"Jul\" | \"Aug\" | \"Sep\" | \"Oct\" | \"Nov\" | \"Dec\";\r\n  amount: number;\r\n}\r\n\r\nexport const AnimatedLineData: IMonthCostRecord[] = [\r\n  // Products\r\n  {\r\n    cost: \"Product\",\r\n    month: \"Jan\",\r\n    amount: 14000,\r\n  },\r\n  {\r\n    cost: \"Product\",\r\n    month: \"Feb\",\r\n    amount: 16000,\r\n  },\r\n  {\r\n    cost: \"Product\",\r\n    month: \"Mar\",\r\n    amount: 18200,\r\n  },\r\n  {\r\n    cost: \"Product\",\r\n    month: \"Apr\",\r\n    amount: 19260,\r\n  },\r\n  {\r\n    cost: \"Product\",\r\n    month: \"May\",\r\n    amount: 25002,\r\n  },\r\n  {\r\n    cost: \"Product\",\r\n    month: \"Jun\",\r\n    amount: 43872,\r\n  },\r\n  {\r\n    cost: \"Product\",\r\n    month: \"Jul\",\r\n    amount: 12000,\r\n  },\r\n  {\r\n    cost: \"Product\",\r\n    month: \"Aug\",\r\n    amount: 13490,\r\n  },\r\n  {\r\n    cost: \"Product\",\r\n    month: \"Sep\",\r\n    amount: 16500,\r\n  },\r\n  {\r\n    cost: \"Product\",\r\n    month: \"Oct\",\r\n    amount: 14920,\r\n  },\r\n  {\r\n    cost: \"Product\",\r\n    month: \"Nov\",\r\n    amount: 17802,\r\n  },\r\n  {\r\n    cost: \"Product\",\r\n    month: \"Dec\",\r\n    amount: 19022,\r\n  },\r\n  // PowderCoating\r\n  {\r\n    cost: \"PowderCoating\",\r\n    month: \"Jan\",\r\n    amount: 3400,\r\n  },\r\n  {\r\n    cost: \"PowderCoating\",\r\n    month: \"Feb\",\r\n    amount: 3530,\r\n  },\r\n  {\r\n    cost: \"PowderCoating\",\r\n    month: \"Mar\",\r\n    amount: 3709,\r\n  },\r\n  {\r\n    cost: \"PowderCoating\",\r\n    month: \"Apr\",\r\n    amount: 4200,\r\n  },\r\n  {\r\n    cost: \"PowderCoating\",\r\n    month: \"May\",\r\n    amount: 4500,\r\n  },\r\n  {\r\n    cost: \"PowderCoating\",\r\n    month: \"Jun\",\r\n    amount: 19014,\r\n  },\r\n  {\r\n    cost: \"PowderCoating\",\r\n    month: \"Jul\",\r\n    amount: 3781,\r\n  },\r\n  {\r\n    cost: \"PowderCoating\",\r\n    month: \"Aug\",\r\n    amount: 3420,\r\n  },\r\n  {\r\n    cost: \"PowderCoating\",\r\n    month: \"Sep\",\r\n    amount: 2200,\r\n  },\r\n  {\r\n    cost: \"PowderCoating\",\r\n    month: \"Oct\",\r\n    amount: 3100,\r\n  },\r\n  {\r\n    cost: \"PowderCoating\",\r\n    month: \"Nov\",\r\n    amount: 3100,\r\n  },\r\n  {\r\n    cost: \"PowderCoating\",\r\n    month: \"Dec\",\r\n    amount: 4200,\r\n  },\r\n  // Installation\r\n\r\n  {\r\n    cost: \"Installation\",\r\n    month: \"Jan\",\r\n    amount: 2580,\r\n  },\r\n  {\r\n    cost: \"Installation\",\r\n    month: \"Feb\",\r\n    amount: 2890,\r\n  },\r\n  {\r\n    cost: \"Installation\",\r\n    month: \"Mar\",\r\n    amount: 3120,\r\n  },\r\n  {\r\n    cost: \"Installation\",\r\n    month: \"Apr\",\r\n    amount: 7908,\r\n  },\r\n  {\r\n    cost: \"Installation\",\r\n    month: \"May\",\r\n    amount: 11000,\r\n  },\r\n  {\r\n    cost: \"Installation\",\r\n    month: \"Jun\",\r\n    amount: 14235,\r\n  },\r\n  {\r\n    cost: \"Installation\",\r\n    month: \"Jul\",\r\n    amount: 2200,\r\n  },\r\n  {\r\n    cost: \"Installation\",\r\n    month: \"Aug\",\r\n    amount: 2800,\r\n  },\r\n  {\r\n    cost: \"Installation\",\r\n    month: \"Sep\",\r\n    amount: 2600,\r\n  },\r\n  {\r\n    cost: \"Installation\",\r\n    month: \"Oct\",\r\n    amount: 2820,\r\n  },\r\n  {\r\n    cost: \"Installation\",\r\n    month: \"Nov\",\r\n    amount: 2600,\r\n  },\r\n  {\r\n    cost: \"Installation\",\r\n    month: \"Dec\",\r\n    amount: 4200,\r\n  },\r\n\r\n  // Logistic\r\n  {\r\n    cost: \"Logistic\",\r\n    month: \"Jan\",\r\n    amount: 1900,\r\n  },\r\n  {\r\n    cost: \"Logistic\",\r\n    month: \"Feb\",\r\n    amount: 1820,\r\n  },\r\n  {\r\n    cost: \"Logistic\",\r\n    month: \"Mar\",\r\n    amount: 1947,\r\n  },\r\n  {\r\n    cost: \"Logistic\",\r\n    month: \"Apr\",\r\n    amount: 2328,\r\n  },\r\n  {\r\n    cost: \"Logistic\",\r\n    month: \"May\",\r\n    amount: 2589,\r\n  },\r\n  {\r\n    cost: \"Logistic\",\r\n    month: \"Jun\",\r\n    amount: 4320,\r\n  },\r\n  {\r\n    cost: \"Logistic\",\r\n    month: \"Jul\",\r\n    amount: 1782,\r\n  },\r\n  {\r\n    cost: \"Logistic\",\r\n    month: \"Aug\",\r\n    amount: 1972,\r\n  },\r\n  {\r\n    cost: \"Logistic\",\r\n    month: \"Sep\",\r\n    amount: 2142,\r\n  },\r\n  {\r\n    cost: \"Logistic\",\r\n    month: \"Oct\",\r\n    amount: 1782,\r\n  },\r\n  {\r\n    cost: \"Logistic\",\r\n    month: \"Nov\",\r\n    amount: 1865,\r\n  },\r\n  {\r\n    cost: \"Logistic\",\r\n    month: \"Dec\",\r\n    amount: 2452,\r\n  },\r\n];\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Line } from \"@ant-design/plots\";\r\nimport DashboardCard from \"@SRC/utils/commomComponents/Dashboard.card\";\r\nimport { AnimatedLineData } from \"@SRC/utils/Data\";\r\n\r\nexport const Temp = () => {\r\n  const config = {\r\n    data: AnimatedLineData,\r\n    xField: \"month\",\r\n    yField: \"amount\",\r\n    seriesField: \"cost\",\r\n    yAxis: {\r\n      label: {\r\n        formatter: (v: any) => `${v} Aus$`,\r\n      },\r\n    },\r\n    legend: {\r\n      position: \"top\",\r\n    },\r\n    smooth: true,\r\n    animation: {\r\n      appear: {\r\n        animation: \"path-in\",\r\n        duration: 5000,\r\n      },\r\n    },\r\n  };\r\n  //@ts-ignore\r\n  return <Line {...config} />;\r\n};\r\n\r\nconst AnimatedChartsModule = () => {\r\n  return DashboardCard({ title: \"Anunal Sales Grid Status\", style: { flexGrow: 1, height: \"32rem\" }, Content: <Temp /> });\r\n};\r\n\r\nexport default AnimatedChartsModule;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Pie } from \"@ant-design/plots\";\r\nimport DashboardCard from \"@SRC/utils/commomComponents/Dashboard.card\";\r\n\r\nconst PieChart = () => {\r\n  const data = [\r\n    {\r\n      type: \"Product\",\r\n      value: 65,\r\n    },\r\n    {\r\n      type: \"PowderCoating\",\r\n      value: 24,\r\n    },\r\n    {\r\n      type: \"Installation\",\r\n      value: 19,\r\n    },\r\n    {\r\n      type: \"Logistic\",\r\n      value: 12,\r\n    },\r\n  ];\r\n  const config = {\r\n    appendPadding: 10,\r\n    data,\r\n    angleField: \"value\",\r\n    colorField: \"type\",\r\n    radius: 0.8,\r\n    label: {\r\n      type: \"outer\",\r\n      content: \"{name} {percentage}\",\r\n    },\r\n    interactions: [\r\n      {\r\n        type: \"pie-legend-active\",\r\n      },\r\n      {\r\n        type: \"element-active\",\r\n      },\r\n    ],\r\n  };\r\n  return <Pie {...config} />;\r\n};\r\n\r\nconst PieChartModule = () => {\r\n  return DashboardCard({ title: \"Cost Percentige\", style: { flexGrow: 1, height: \"32rem\" }, Content: <PieChart /> });\r\n};\r\n\r\nexport default PieChartModule;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { RingProgress } from \"@ant-design/plots\";\r\nimport { Descriptions } from \"antd\";\r\n\r\nconst TransferRatesDesc = () => {\r\n  return (\r\n    <Descriptions style={{ marginTop: \"50px\" }}>\r\n      <Descriptions.Item labelStyle={{ width: \"50px\" }} contentStyle={{ width: \"40px\" }}>\r\n        26 out of 198 Quotes is Settled\r\n      </Descriptions.Item>\r\n    </Descriptions>\r\n  );\r\n};\r\n\r\nconst SettledOrderChart = () => {\r\n  const config = {\r\n    height: 100,\r\n    width: 100,\r\n    autoFit: false,\r\n    percent: 0.13,\r\n    color: [\"#F4664A\", \"#E8EDF3\"],\r\n    innerRadius: 0.85,\r\n    radius: 0.98,\r\n    statistic: {\r\n      title: {\r\n        style: {\r\n          color: \"#363636\",\r\n          fontSize: \"12px\",\r\n          lineHeight: \"14px\",\r\n        },\r\n        formatter: () => \"Transfer Rate\",\r\n      },\r\n    },\r\n  };\r\n  return (\r\n    <>\r\n      <div style={{ display: \"flex\" }}>\r\n        <RingProgress {...config} />\r\n        <TransferRatesDesc />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SettledOrderChart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Bullet } from \"@ant-design/plots\";\r\nimport { Descriptions, Space } from \"antd\";\r\n\r\nconst MonthlyProgressCard = () => {\r\n  const data = [\r\n    {\r\n      title: \"Target\",\r\n      ranges: [40, 70, 100],\r\n      measures: [80],\r\n      target: 85,\r\n    },\r\n  ];\r\n  const config = {\r\n    data,\r\n    measureField: \"measures\",\r\n    rangeField: \"ranges\",\r\n    targetField: \"target\",\r\n    xField: \"title\",\r\n    color: {\r\n      range: [\"#FFbcb8\", \"#FFe0b0\", \"#bfeec8\"],\r\n      measure: \"#5B8FF9\",\r\n      target: \"#39a3f4\",\r\n    },\r\n    xAxis: {\r\n      line: null,\r\n    },\r\n    yAxis: false,\r\n    label: {\r\n      target: false,\r\n    },\r\n  };\r\n  //@ts-ignore\r\n  return <Bullet {...config} style={{ height: \"5rem\" }} />;\r\n};\r\n\r\nexport const MonthlyTargetDesc = () => {\r\n  return (\r\n    <Descriptions>\r\n      <Descriptions.Item label=\"Target\" labelStyle={{ width: \"50px\" }} contentStyle={{ width: \"40px\" }}>\r\n        Aus$40000\r\n      </Descriptions.Item>\r\n    </Descriptions>\r\n  );\r\n};\r\n\r\nexport default MonthlyProgressCard;\r\n","import { getOrderByParams, getShortageItems } from \"@SRC/data/api.service\";\r\nimport { Carousel, Space } from \"antd\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { setEnvironmentData } from \"worker_threads\";\r\n\r\ninterface IShortageItem {\r\n  name: string;\r\n  currentInStock: number;\r\n}\r\n\r\nconst ProductListCard = () => {\r\n  const [data, setData] = useState<Array<IShortageItem>>([]);\r\n  const [loadingStatus, setLoadingStatus] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getShortageItems(setData);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Carousel autoplay dotPosition=\"left\" dots={false} effect=\"fade\">\r\n        {data.map((item) => {\r\n          return (\r\n            <>\r\n              <SingleItem>\r\n                <Space direction=\"vertical\">\r\n                  <h4>{item.name}</h4>\r\n                  <p>\r\n                    Currently only <strong>{item.currentInStock}</strong> left!!\r\n                  </p>\r\n                </Space>\r\n              </SingleItem>\r\n            </>\r\n          );\r\n        })}\r\n      </Carousel>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductListCard;\r\n\r\nconst SingleItem = styled.div`\r\n  height: 100px;\r\n  text-align: center;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport DashboardCard from \"@SRC/utils/commomComponents/Dashboard.card\";\r\nimport { Statistic, Space, Descriptions } from \"antd\";\r\nimport { CaretUpOutlined } from \"@ant-design/icons\";\r\nimport SettledOrderChartCard from \"./SettledOrderChart.card\";\r\nimport MonthlyProgressCard, { MonthlyTargetDesc } from \"./MonthlyTarget.card\";\r\nimport ProductListCard from \"./ProductList.card\";\r\n\r\nconst SalesAmount = () => {\r\n  return DashboardCard({\r\n    title: \"Weekly Sale State\",\r\n    style: { flexGrow: 1, height: \"12rem\" },\r\n    Content: (\r\n      <>\r\n        <h2>$42087</h2>\r\n        <Space>\r\n          <Statistic title=\"Compare to last Week\" value=\"17\" precision={2} valueStyle={{ color: \"#3f8600\", fontSize: \"1rem\" }} prefix={<CaretUpOutlined />} suffix=\"%\" />\r\n          <Statistic title=\"Surplus\" value=\"2860\" precision={2} valueStyle={{ color: \"#861900\", fontSize: \"1rem\" }} prefix={<CaretUpOutlined />} suffix=\"AUS$\" />\r\n        </Space>\r\n      </>\r\n    ),\r\n  });\r\n};\r\n\r\nconst OrderTransChart = () => {\r\n  return DashboardCard({\r\n    title: \"Order Tranfer Rates\",\r\n    style: { flexGrow: 1, height: \"12rem\" },\r\n    Content: (\r\n      <>\r\n        <SettledOrderChartCard />\r\n      </>\r\n    ),\r\n  });\r\n};\r\n\r\nconst SettledOrderChart1 = () => {\r\n  return DashboardCard({\r\n    title: \"Monthly SalesTarget\",\r\n    style: { flexGrow: 1, height: \"12rem\" },\r\n    Content: (\r\n      <>\r\n        <MonthlyProgressCard />\r\n        <MonthlyTargetDesc />\r\n      </>\r\n    ),\r\n  });\r\n};\r\n\r\nconst SettledOrderChart2 = () => {\r\n  return DashboardCard({\r\n    title: \"Shortage List\",\r\n    style: { flexGrow: 1, height: \"12rem\" },\r\n    Content: (\r\n      <>\r\n        <ProductListCard />\r\n      </>\r\n    ),\r\n  });\r\n};\r\n\r\nexport default function WeeklyStatusReportCardsModule() {\r\n  return (\r\n    <StatusReportContainer>\r\n      {SalesAmount()}\r\n      {OrderTransChart()}\r\n      {SettledOrderChart1()}\r\n      {SettledOrderChart2()}\r\n    </StatusReportContainer>\r\n  );\r\n}\r\n\r\nconst StatusReportContainer = styled.div`\r\n  margin-bottom: 1rem;\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  grid-template-rows: 1fr;\r\n  grid-column-gap: 10px;\r\n  grid-row-gap: 0px;\r\n`;\r\n","import { Badge, Table } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DashboardCard from \"@SRC/utils/commomComponents/Dashboard.card\";\r\nimport { fabricationStatusIndicator, logisticStatusIndicator, orderStatusIndicator } from \"@SRC/utils/utilFuncs\";\r\nimport { getOrderByParams } from \"@SRC/data/api.service\";\r\n\r\nconst columns = [\r\n  { title: \"Order Number\", dataIndex: \"id\", key: \"orderNumber\" },\r\n  { title: \"Client\", dataIndex: \"clientName\", key: \"clientName\" },\r\n  { title: \"OrderAmount\", dataIndex: \"pricetotalAmount\", key: \"orderAmount\" },\r\n  { title: \"Amount payed\", dataIndex: \"orderPayed\", key: \"amountPayed\" },\r\n  {\r\n    title: \"Logistic Status\",\r\n    dataIndex: \"logisticStatus\",\r\n    key: \"logisticStatus\",\r\n    render: (currentRowValue: any, currentColumnValue: any, index: number) => (\r\n      <span>\r\n        <Badge status={logisticStatusIndicator(currentRowValue)} />\r\n        {currentRowValue}\r\n      </span>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Payment Status\",\r\n    dataIndex: \"orderStatus\",\r\n    key: \"orderStatus\",\r\n    render: (currentRowValue: any, currentColumnValue: any, index: number) => (\r\n      <span>\r\n        <Badge status={orderStatusIndicator(currentRowValue)} />\r\n        {currentRowValue}\r\n      </span>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Fabrication Status\",\r\n    dataIndex: \"fabricationStatus\",\r\n    key: \"fabricationStatus\",\r\n    render: (currentRowValue: any, currentColumnValue: any, index: number) => (\r\n      <span>\r\n        <Badge status={fabricationStatusIndicator(currentRowValue)} />\r\n        {currentRowValue}\r\n      </span>\r\n    ),\r\n  },\r\n];\r\n\r\nfunction onChange(pagination: any, filters: any, sorter: any, extra: any) {\r\n  console.log(\"params\", pagination, filters, sorter, extra);\r\n}\r\n\r\nconst DashboardOrderList = () => {\r\n  const [data, setData] = useState<Array<any>>([]);\r\n  const [loadingStatus, setLoadingStatus] = useState<boolean>(false);\r\n  const customSearchParams = {\r\n    checked: true,\r\n  };\r\n\r\n  useEffect(() => {\r\n    getOrderByParams(customSearchParams, setData, setLoadingStatus);\r\n  }, []);\r\n\r\n  return DashboardCard({\r\n    title: \"Watching Order List\",\r\n    style: { flexGrow: 1, marginBottom: \"1rem\" },\r\n    Content: (\r\n      <>\r\n        <Table columns={columns} dataSource={data} onChange={onChange} pagination={false} />\r\n      </>\r\n    ),\r\n  });\r\n};\r\n\r\nexport default DashboardOrderList;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { orderStatusIndicator, fabricationStatusIndicator, logisticStatusIndicator } from \"@SRC/utils/utilFuncs\";\r\nimport { Table, Input, Badge, Space } from \"antd\";\r\nimport DashboardCard from \"@SRC/utils/commomComponents/Dashboard.card\";\r\nimport { title } from \"process\";\r\nimport AnimatedChartsModule, { Temp } from \"@SRC/components/Dashboard/AnimatedCharts.module\";\r\nimport PieChartModule from \"@SRC/components/Dashboard/PieChart.module\";\r\nimport WeeklyStatusReportCardsModule from \"@SRC/components/Dashboard/StatusReportCards.module\";\r\nimport DashboardOrderList from \"@SRC/components/Dashboard/OrderList.module\";\r\n\r\nconst DashboardIndex = () => {\r\n  const [data, setData] = React.useState<any>([]);\r\n  const [searchParams, setSearchParams] = React.useState<any>({ orderId: \"\" });\r\n  return (\r\n    <>\r\n      <MainLayout>\r\n        <WeeklyStatusReportCardsModule />\r\n        <DashboardOrderList />\r\n        <AnimiLayoutContainer>\r\n          <AnimatedChartsModule />\r\n          <PieChartModule />\r\n        </AnimiLayoutContainer>\r\n      </MainLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DashboardIndex;\r\n\r\nconst MainLayout = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`;\r\n\r\nconst AnimiLayoutContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-template-rows: 1fr;\r\n  grid-column-gap: 10px;\r\n  grid-row-gap: 0px;\r\n  width: 100%;\r\n  /* background-color: #303030; */\r\n`;\r\n"],"names":["Meta","Card","title","style","Content","loadingStatus","boxShadow","loading","hoverable","AnimatedLineData","cost","month","amount","Temp","config","data","xField","yField","seriesField","yAxis","label","formatter","v","legend","position","smooth","animation","appear","duration","DashboardCard","flexGrow","height","PieChart","appendPadding","type","value","angleField","colorField","radius","content","interactions","TransferRatesDesc","marginTop","labelStyle","width","contentStyle","display","autoFit","percent","color","innerRadius","statistic","fontSize","lineHeight","MonthlyTargetDesc","ranges","measures","target","measureField","rangeField","targetField","range","measure","xAxis","line","useState","setData","useEffect","getShortageItems","autoplay","dotPosition","dots","effect","map","item","SingleItem","direction","name","currentInStock","styled","WeeklyStatusReportCardsModule","StatusReportContainer","precision","valueStyle","prefix","CaretUpOutlined","suffix","columns","dataIndex","key","render","currentRowValue","currentColumnValue","index","status","logisticStatusIndicator","orderStatusIndicator","fabricationStatusIndicator","onChange","pagination","filters","sorter","extra","console","log","setLoadingStatus","customSearchParams","checked","getOrderByParams","marginBottom","dataSource","React","orderId","MainLayout","AnimiLayoutContainer"],"sourceRoot":""}